{"version":3,"sources":["components/card/card.component.jsx","components/cards-list/cards-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardsList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchFiled","target","value","state","fetch","then","response","json","user","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACG,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCDRC,EAAY,SAACR,GAAD,OAErB,aADA,CACA,OAAKC,UAAU,aAAf,SAEQD,EAAMS,SAASC,KAEf,SAAAN,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCG1BM,G,MAXG,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACd,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoDCG,E,kDAhCb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAM,CACTb,SAAU,GACVU,YAAa,IAJJ,E,qDAOb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAOtC,WAAQ,MAEyBC,KAAKN,MAA7Bb,EAFD,EAECA,SAASU,EAFV,EAEUA,YAEVU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAE5D,cAAC,EAAD,CAAWJ,SAAUoB,W,GA5BXI,aChBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.749e3e83.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = (props)=> (\n<div className=\"card-container\">\n   <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n   <h2>{props.monster.name}</h2>\n   <p>{props.monster.email}</p>\n</div>\n);","import React, {  } from 'react';\nimport './cards-list.style.css';\nimport {Card} from  '../card/card.component'\n//props: any parameter that we pass into card-list in app.js\n//children: property object that gets passsed between the anguler brackets <> children</>\n\nexport const CardsList = (props)=> (\n    //console.log(props);\n    <div className=\"cards-list\">\n        {\n            props.monsters.map(\n                /* \"monster\" is a prop passed from the card component */\n            monster=>(<Card key={monster.id} monster={monster}/>)\n          )\n        }\n    </div>\n);","import React from 'react';\n\nimport './search-box.style.css';\n\nconst SearchBox = ({placeholder, handleChange})=>(\n    <input \n    className=\"search\"\n    type=\"search\" \n    placeholder={placeholder} \n    onChange={handleChange\n    //setState's 2nd argument is callback function to log any output we wish to. it works well\n    //within the asynchronous concept\n    /* this.setState({searchFiled:e.target.value}, ()=>console.log(this.state));*/}></input>\n    );\n\nexport default SearchBox;","//import logo from './logo.svg';\nimport './App.css';\nimport {CardsList} from './components/cards-list/cards-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nimport React,{ Component } from 'react';\n\n/* function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n           Edit <code>src/App.js</code> and save to reload. \n          //hello i m nimish\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n} */\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      monsters: [],\n      searchFiled: ''\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(user=>this.setState({monsters:user}));\n  }\n\n  handleChange = (e) => {\n    this.setState({searchFiled:e.target.value})\n  }\n\n  render(){\n    //destructuring of object\n    const {monsters,searchFiled} = this.state;\n\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchFiled.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster Roaldex</h1>\n        <SearchBox placeholder='monsters search' handleChange={this.handleChange}/>\n        {/* below monsters are props that we pass to cardslist which then map the monster names */}\n        <CardsList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}